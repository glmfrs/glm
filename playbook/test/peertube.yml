---
- hosts: all
  remote_user: root
  vars:
    ansible_python_interpreter: /usr/bin/python3
    peertube_fqdn: peertube.example.com
    peertube_version: v2.3.0
  tasks:

### PeerTube https://docs.joinpeertube.org/#/install-any-os

  - name: yarn repository key
    apt_key:
      url: https://dl.yarnpkg.com/debian/pubkey.gpg
      state: present
  - name: yarn repository
    apt_repository:
      repo: deb https://dl.yarnpkg.com/debian/ stable main
      state: present
      filename: yarn
  - name: installation des paquets
    apt:
      name:
        - certbot
        - curl
        - g++
        - git
        - ffmpeg
        - make
        - nginx
        - nodejs
        - npm
        - openssl
        - postgresql
        - postgresql-contrib
        - python-dev
        - python3-psycopg2
        - redis-server
        - sudo
        - unzip
        - vim-nox
        - yarn  
      state: latest
      update_cache: yes
    ignore_errors: yes
  - name: services
    systemd:
      name: "{{ item }}"
      state: started
      enabled: yes
      masked: no
      daemon_reload: yes
    with_items:
      - postgresql.service
      - redis.service
  - name: utilisateur
    user:
      name: peertube
      comment: peertube-user
      home: /var/www/peertube
      shell: /bin/bash
  - name: peertube repertoires
    file:
      path:  "{{ item }}"
      state: directory
      owner: peertube
      group: peertube
      mode: 0755
    with_items:
      - /var/www/peertube/config/
      - /var/www/peertube/storage/
      - /var/www/peertube/versions/
  - name: peertube db
    postgresql_db:
      name: peertube_prod
      encoding: UTF-8
      template: template0
    become: yes
    become_user: postgres
  - name: postgresql user
    postgresql_user:
      db: peertube_prod
      name: peertube
      password: VgiqnhPEnQEG2aNK9MCXbqwWonMFM6WnjDGTUxM9YC4YQpggUV2oR
    become: yes
    become_user: postgres
  - name: postgresql extensions
    postgresql_ext:
      name: "{{ item }}"
      db: peertube_prod
    with_items:
      - pg_trgm
      - unaccent
    become: yes
    become_user: postgres
  - name: peertube telechargement du client
    get_url:
      url: https://github.com/Chocobozzz/PeerTube/releases/download/{{ peertube_version }}/peertube-{{ peertube_version }}.zip
      dest: /var/www/peertube/versions/
      owner: peertube
      group: peertube
    become: yes
    become_user: peertube
  - name: peertube decompression du client
    unarchive:
      src: /var/www/peertube/versions/peertube-{{ peertube_version }}.zip
      dest: /var/www/peertube/versions/
      remote_src: yes
      owner: peertube
      group: peertube
  - name: peertube lien symbolique
    file:
      src: /var/www/peertube/versions/peertube-{{ peertube_version }}/
      dest: /var/www/peertube/peertube-latest
      owner: peertube
      group: peertube
      state: link
  - name: peertube yarn installation
    yarn:
      path: /var/www/peertube/versions/peertube-{{ peertube_version }}/
      production: yes
    become: yes
    become_user: peertube
  - name: peertube copie configuration
    copy:
      src: /var/www/peertube/versions/peertube-{{ peertube_version }}/config/production.yaml.example
      dest: /var/www/peertube/config/production.yaml
      remote_src: yes
      owner: peertube
      group: peertube
      mode: '0755'
  - name: nginx configuration
    copy:
      src: /var/www/peertube/peertube-latest/support/nginx/peertube
      dest: /etc/nginx/sites-available/peertube
      remote_src: yes
      owner: root
      group: root
      mode: '0644'
  - name: configuration du fqdn
    replace:
      path: /etc/nginx/sites-available/peertube
      regexp: 'peertube.example.com'
      replace: '{{ peertube_fqdn }}'
  - name: nginx activation
    file:
      src: /etc/nginx/sites-available/peertube
      dest: /etc/nginx/sites-enabled/peertube
      state: link
  - name: nginx service
    systemd:
      name: nginx.service
      state: started
      enabled: yes
      masked: no
      daemon_reload: yes
  - name: sysctl configuration
    copy:
      src: /var/www/peertube/versions/peertube-{{ peertube_version }}/support/sysctl.d/30-peertube-tcp.conf
      dest: /etc/sysctl.d/30-peertube-tcp.conf
      remote_src: yes
      owner: root
      group: root
      mode: '0644'
  - name: sysctl application
    command: sysctl -p /etc/sysctl.d/30-peertube-tcp.conf
  - name: systemd configuration
    copy:
      src: /var/www/peertube/versions/peertube-{{ peertube_version }}/support/systemd/peertube.service
      dest: /etc/systemd/system/peertube.service
      remote_src: yes
      owner: root
      group: root
      mode: '0644'
  - name: peertube.service
    systemd:
      name: peertube.service
      state: started
      enabled: yes
      masked: no
      daemon_reload: yes